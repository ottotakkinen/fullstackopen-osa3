{"version":3,"sources":["components/Persons.js","components/Filter.js","components/AddPersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","persons","filter","onDelete","personsList","person","name","toLowerCase","includes","map","number","onClick","id","Filter","handleFilterInput","onChange","AddPersonForm","props","onSubmit","handleSubmit","handleNameInput","handleNumberInput","type","Notification","error","message","styles","color","fontSize","background","border","borderRadius","padding","margin","style","baseUrl","axios","get","then","res","data","newObject","post","delete","put","initialErrorMessage","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","errorMessage","setErrorMessage","useEffect","personService","event","target","value","preventDefault","find","window","confirm","newPerson","p","catch","setTimeout","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b5b7e28.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Persons({ persons, filter, onDelete }) {\r\n  const filteredPersons = persons.filter((person) =>\r\n    person.name.toLowerCase().includes(filter?.toLowerCase())\r\n  );\r\n\r\n  const personsList = filteredPersons.map((person) => {\r\n    return (\r\n      <li key={person.name}>\r\n        {person.name} {person.number}{' '}\r\n        <button onClick={() => onDelete(person.id)}>delete</button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>Numbers</h2>\r\n      {personsList}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Filter({ handleFilterInput }) {\r\n  return (\r\n    <div>\r\n      filter shown with\r\n      <input onChange={handleFilterInput} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function AddPersonForm(props) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        name: <input onChange={props.handleNameInput} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={props.handleNumberInput} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Notification({ error, message }) {\r\n  const styles = {\r\n    color: 'green',\r\n    fontSize: '1.5rem',\r\n    background: '#D3D3D3',\r\n    border: 'green solid 4px',\r\n    borderRadius: '4px',\r\n    padding: '0.75rem',\r\n    margin: '1rem 0',\r\n  };\r\n\r\n  if (error) {\r\n    styles.color = 'red';\r\n    styles.border = 'red solid 4px';\r\n  }\r\n\r\n  if (!message) {\r\n    return null;\r\n  }\r\n  return <div style={styles}>{message}</div>;\r\n}\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create, remove, update };\r\n","import React, { useState, useEffect } from 'react';\n\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport AddPersonForm from './components/AddPersonForm';\nimport Notification from './components/Notification';\n\nimport personService from './services/persons';\n\nconst initialErrorMessage = { error: true, message: '' };\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [errorMessage, setErrorMessage] = useState(initialErrorMessage);\n\n  useEffect(() => {\n    personService.getAll().then((persons) => setPersons(persons));\n  }, []);\n\n  const handleNameInput = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberInput = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterInput = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const person = persons.find((person) => person.name === newName);\n\n    // If the person is already in the DB, update their number\n    if (\n      person &&\n      window.confirm(\n        `${person.name} is already in the address book, update phone number?`\n      )\n    ) {\n      const newPerson = { name: person.name, number: newNumber };\n      personService\n        .update(person.id, newPerson)\n        .then((res) =>\n          setPersons(persons.map((p) => (p.id !== person.id ? p : res)))\n        )\n        .catch((error) => {\n          setErrorMessage({\n            error: true,\n            message: `the person '${person.name}' was already deleted from server`,\n          });\n          setTimeout(() => setErrorMessage(initialErrorMessage), 4000);\n          setPersons(persons.filter((p) => p.id !== person.id));\n        });\n      setErrorMessage({ error: false, message: `Changed ${newName}'s number` });\n      setTimeout(() => setErrorMessage(initialErrorMessage), 4000);\n      return;\n    } else if (person && person.name === newName) {\n      return;\n    }\n\n    // Else if the person doesn't exist, create them\n    const newPerson = { name: newName, number: newNumber };\n\n    personService.create(newPerson).then((returnedPerson) => {\n      setPersons(persons.concat(returnedPerson));\n    });\n    setErrorMessage({ error: false, message: `Added ${newName}` });\n    setTimeout(() => setErrorMessage(initialErrorMessage), 4000);\n  };\n\n  const deletePerson = (id) => {\n    const person = persons.find((p) => p.id === id);\n\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .remove(id)\n        .then(() => setPersons(persons.filter((p) => p.id !== id)));\n      setErrorMessage({ error: true, message: `Deleted ${person.name}` });\n      setTimeout(() => setErrorMessage(initialErrorMessage), 4000);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {errorMessage ? (\n        <Notification\n          error={errorMessage.error}\n          message={errorMessage.message}\n        />\n      ) : (\n        ''\n      )}\n      <Filter handleFilterInput={handleFilterInput} />\n      <h2>add a new</h2>\n      <AddPersonForm\n        handleSubmit={handleSubmit}\n        handleNameInput={handleNameInput}\n        handleNumberInput={handleNumberInput}\n      />\n      <Persons persons={persons} filter={filter} onDelete={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}